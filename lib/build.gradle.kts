/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14.2/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */
import java.time.LocalDate

plugins {
    id("com.android.library") version "8.11.0"
    id("org.jetbrains.kotlin.android") version "2.1.21"
    kotlin("plugin.serialization") version "2.1.21"
    id("com.vanniktech.maven.publish") version "0.34.0"
    id("signing")
}

dependencies {
    implementation("com.android.installreferrer:installreferrer:2.2")
    implementation("com.squareup.okhttp3:okhttp:4.12.0")
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3")
    
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:2.0.4")
    
    // Navigation Component dependencies - optional for apps that want to use NavigationLinkHandler
    compileOnly("androidx.navigation:navigation-runtime-ktx:2.7.6")
    compileOnly("androidx.core:core-ktx:1.12.0")
    compileOnly("androidx.appcompat:appcompat:1.6.1")
    
    testImplementation("org.junit.jupiter:junit-jupiter:5.13.1")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.13.1") 
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.13.1")
    testImplementation("org.junit.platform:junit-platform-launcher:1.10.1")
    testImplementation("org.junit.platform:junit-platform-commons:1.10.1")
    testImplementation("org.junit.platform:junit-platform-engine:1.10.1")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

android {
    compileSdk = 34

    defaultConfig {
        minSdk = 21
        buildConfigField("String", "SDK_VERSION", "\"${project.version}\"")
        buildConfigField("String", "SDK_NAME", "\"AppLinksSDK\"")
        buildConfigField("String", "BUILD_DATE", "\"${LocalDate.now()}\"")
    }

    buildTypes {
        getByName("release") {
            isMinifyEnabled = false
        }
    }

    buildFeatures {
        buildConfig = true
    }

    compileOptions {
        isCoreLibraryDesugaringEnabled = true
    }

    namespace = "com.applinks.android"
}

tasks.withType<Test>().configureEach {
    useJUnitPlatform()
}


mavenPublishing {
    coordinates("com.applinks", "sdk-android", project.version.toString())

    pom {
        name.set("AppLinksSDK")
        description.set("Android SDK for Applinks, a tool for handling deferred deep links and app install attribution using the PlayStore referrer.")
        inceptionYear.set("2025")
        url.set("https://github.com/applinksdev/applinks-sdk-android/")
        licenses {
            license {
                name.set("The MIT License")
                url.set("https://opensource.org/licenses/MIT")
                distribution.set("repo")
            }
        }
        developers {
            developer {
                id.set("ApplinksDev")
                name.set("Applinks")
                url.set("https://github.com/ApplinksDev/")
            }
        }
        scm {
            url.set("https://github.com/ApplinksDev/applinks-sdk-android/")
            connection.set("scm:git:git://github.com/ApplinksDev/applinks-sdk-android.git")
            developerConnection.set("scm:git:ssh://git@github.com/ApplinksDev/applinks-sdk-android.git")
        }
    }

    publishToMavenCentral()

    signAllPublications()
}

signing {
    useGpgCmd()
}